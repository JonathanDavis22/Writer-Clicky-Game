{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","highscore","App","state","cards","_this","find","o","i","count","setState","console","log","this","sort","Math","random","gameOver","forEach","card","alert","concat","_this2","components_Wrapper","components_Header","map","components_Card","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"0kEAWeA,SARF,SAAAC,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MACxDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAMK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCA/BC,SAHC,SAAAZ,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCQrBC,SATA,SAAAd,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,UAC9BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACYJ,EAAMe,MADlB,eACqCf,EAAMgB,qBC8DpCC,oNA3DXC,MAAQ,CACNC,QACAJ,MAAO,EACPC,UAAW,KAsBbV,WAAa,SAAAC,GACXa,EAAKF,MAAMC,MAAME,KAAK,SAACC,EAAGC,GACxB,GAAID,EAAEf,KAAOA,EAAI,CACf,GAAuB,IAAnBY,EAAMI,GAAGC,MAMb,OALAL,EAAMI,GAAGC,MAAQL,EAAMI,GAAGC,MAAO,EACjCJ,EAAKK,SAAU,CAACV,MAAQK,EAAKF,MAAMH,MAAO,GAAI,WAC5CW,QAAQC,IAAIC,KAAKV,MAAMH,SAEzBK,EAAKF,MAAMC,MAAMU,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEPX,EAAKY,iBAOXA,SAAW,WAWT,OAVIZ,EAAKF,MAAMH,MAAQK,EAAKF,MAAMF,WAChCI,EAAKK,SAAS,CAACT,UAAWI,EAAKF,MAAMH,OAAQ,WAC3CW,QAAQC,IAAIC,KAAKV,MAAMF,aAG3BI,EAAKF,MAAMC,MAAMc,QAAQ,SAAAC,GACvBA,EAAKV,MAAQ,IAEfW,MAAK,yBAAAC,OAA0BhB,EAAKF,MAAMH,QAC1CK,EAAKK,SAAS,CAACV,MAAO,KACf,2EA9CA,IAAAsB,EAAAT,KACP,OACE3B,EAAAC,EAAAC,cAACmC,EAAD,KACArC,EAAAC,EAAAC,cAACoC,EAAD,CAAQxB,MAAOa,KAAKV,MAAMH,MAAOC,UAAWY,KAAKV,MAAMF,WAAvD,wBACCY,KAAKV,MAAMC,MAAMqB,IAAI,SAAAN,GAAI,OACxBjC,EAAAC,EAAAC,cAACsC,EAAD,CACAnC,WAAY+B,EAAK/B,WACjBC,GAAI2B,EAAK3B,GACTmC,IAAKR,EAAK3B,GACVI,MAAOuB,EAAKvB,kBAnBJgC,oBCHlBC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8825ab7c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n    <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n        <div className=\"img-container\">\n            <img  alt={props.name} src={props.image} />\n        </div>\n    </div>\n);\n\nexport default Card;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props =>\n    <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n    <div className=\"header\">\n        <div className=\"title\">{props.children}</div>\n        <div className=\"scores\">\n            Score: {props.score} Highscore: {props.highscore}\n        </div>\n    </div>\n);\n\nexport default Header;","import React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\nimport './App.css';\n\n\nclass App extends Component {\n  // Setting this.state.cards to the cards JSON array\n    state = {\n      cards,\n      score: 0,\n      highscore: 0\n    };\n\n\n    // Map over this.state.cards to render a card component for each card object\n    render() {\n      return (\n        <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Literary Clicky Game</Header>\n        {this.state.cards.map(card => (\n          <Card\n          clickCount={this.clickCount}\n          id={card.id}\n          key={card.id}\n          image={card.image}\n          />\n        ))}\n        </Wrapper>\n      );\n    }\n\n\n    clickCount = id => {\n      this.state.cards.find((o, i) => {\n        if (o.id === id) {\n          if (cards[i].count === 0){\n          cards[i].count = cards[i].count +1;\n          this.setState ({score : this.state.score +1}, function(){\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n\n\n    gameOver = () => {\n      if (this.state.score > this.state.highscore) {\n        this.setState({highscore: this.state.score}, function() {\n          console.log(this.state.highscore);\n        });\n      }\n      this.state.cards.forEach(card => {\n        card.count = 0;\n      });\n      alert(`Game Over :( \\nScore: ${this.state.score}`);\n      this.setState({score: 0});\n      return true;\n    }\n  }\n\n  \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}